apiVersion: v1
kind: Service
metadata:
  name: kakera
  labels:
    app: kakera
spec:
  selector:
    app: kakera
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kakera
  labels:
    app: kakera
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: kakera
    spec:
      containers:
      - name: kakera
        image: kazokuco/kakera
        imagePullPolicy: Always
        command: ["/bin/bash", "-c", "cp -R /srv/kakera/public/static/* /srv/www/static && ./manage.py migrate --noinput && ./docker_entrypoint.sh"]
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: kakera
              key: secret
        - name: DB_ENGINE
          value: django.db.backends.postgresql
        - name: DB_HOST
          value: postgresql.default.svc.cluster.local
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: kakera
              key: db.name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: kakera
              key: db.username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kakera
              key: db.password
        - name: REDIS_URL
          value: redis://redis.default.svc.cluster.local:6379/0
        - name: DEFAULT_FILE_STORAGE
          value: storages.backends.s3boto3.S3Boto3Storage
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: kakera
              key: aws.keyid
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: kakera
              key: aws.key
        - name: AWS_STORAGE_BUCKET_NAME
          value: kakera
        - name: AWS_S3_CUSTOM_DOMAIN
          value: d31u62iyrzhln9.cloudfront.net
        - name: CLOUDFLARE_EMAIL
          valueFrom:
            secretKeyRef:
              name: cloudflare
              key: email
        - name: CLOUDFLARE_TOKEN
          valueFrom:
            secretKeyRef:
              name: cloudflare
              key: token
        - name: GUNICORN_WORKERS
          value: "4"
        - name: GUNICORN_THREADS
          value: "1"
        readinessProbe:
          httpGet:
            path: /healthz/
            port: gunicorn
            httpHeaders:
            - name: Accept
              value: application/json
          successThreshold: 6
        ports:
        - name: gunicorn
          containerPort: 8000
          protocol: TCP
        volumeMounts:
        - name: static
          mountPath: /srv/www/static
      - name: nginx
        image: nginx:1
        imagePullPolicy: Always
        command: ["nginx", "-c", "/etc/config/nginx.conf"]
        readinessProbe:
          httpGet:
            path: /healthz/
            port: http
            httpHeaders:
            - name: Accept
              value: application/json
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /etc/config
        - name: static
          mountPath: /srv/www/static
      volumes:
      - name: config
        configMap:
          name: kakera
      - name: static
        emptyDir: {}
