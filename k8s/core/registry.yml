---
apiVersion: v1
kind: Service
metadata:
  name: registry
  labels:
    app: registry
spec:
  selector:
    app: registry
  ports:
  - port: 80
    targetPort: 5000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: registry
  annotations:
    kubernetes.io/tls-acme: "true"
  labels:
    app: registry
spec:
  tls:
  - secretName: registry-tls
    hosts:
    - registry.svc.kazoku.co
  rules:
  - host: registry.svc.kazoku.co
    http:
      paths:
      - path: /
        backend:
          serviceName: registry
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: registry
  labels:
    app: registry
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
      - name: registry
        image: registry:2
        imagePullPolicy: Always
        env:
        - name: REGISTRY_HTTP_ADDR
          value: 0.0.0.0:5000
        - name: REGISTRY_HTTP_HOST
          value: https://registry.svc.kazoku.co
        - name: REGISTRY_HTTP_SECRET
          valueFrom:
            secretKeyRef:
              name: registry
              key: secret
        - name: REGISTRY_HTTP_DEBUG_ADDR
          value: 0.0.0.0:5001
        - name: REGISTRY_REDIS_ADDR
          value: redis.svc.default.cluster.local:6379
        - name: REGISTRY_STORAGE
          value: s3
        - name: REGISTRY_STORAGE_S3_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: registry.s3
              key: access_key_id
        - name: REGISTRY_STORAGE_S3_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: registry.s3
              key: secret_access_key
        - name: REGISTRY_STORAGE_S3_REGION
          valueFrom:
            secretKeyRef:
              name: registry.s3
              key: region
        - name: REGISTRY_STORAGE_S3_BUCKET
          valueFrom:
            secretKeyRef:
              name: registry.s3
              key: bucket
        - name: REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR
          value: redis
        livenessProbe:
          httpGet:
            path: /debug/health
            port: 5001
        readinessProbe:
          httpGet:
            path: /debug/health
            port: 5001
