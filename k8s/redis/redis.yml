apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: redis
  labels:
    app: redis
spec:
  clusterIP: None
  selector:
    app: redis
  ports:
  - name: redis
    port: 6379
  - name: sentinel
    port: 26379
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: redis
  labels:
    app: redis
spec:
  serviceName: redis
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: redis
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: redis
        image: redis:3.2-alpine
        imagePullPolicy: Always
        command:
        - sh
        - -exc
        - |
          if [ $(hostname) != "${SERVICE}-0" ]; then
            SLAVEOF="--slaveof ${SERVICE}-0.${SERVICE}.${NAMESPACE} 6379"
          fi
          redis-server ${SLAVEOF} \
            --protected-mode no \
            --appendonly yes\
            --save 60 1000
        env:
        - name: SERVICE
          value: redis
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: redis
          containerPort: 6379
        volumeMounts:
        - name: data
          mountPath: /data
        livenessProbe:
          exec:
            command: [ redis-cli, ping ]
        readinessProbe:
          exec:
            command: [ redis-cli, ping ]
        resources:
          requests:
            cpu: 100m
            memory: 500Mi
      - name: sentinel
        image: redis:3.2-alpine
        imagePullPolicy: Always
        command:
        - sh
        - -c
        - |
          cat <<EOF > sentinel.conf
          sentinel monitor master ${SERVICE}-0.${SERVICE}.${NAMESPACE} 6379 2
          sentinel down-after-milliseconds master 60000
          sentinel failover-timeout master 60000
          sentinel parallel-syncs master 1
          EOF
          exec redis-sentinel sentinel.conf
        env:
        - name: SERVICE
          value: redis
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: sentinel
          containerPort: 26379
        livenessProbe:
          exec:
            command: [ redis-cli, -p, "26379", ping ]
        readinessProbe:
          exec:
            command: [ redis-cli, -p, "26379", ping ]
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
