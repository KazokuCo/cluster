---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-ingress
  namespace: nginx-ingress
data:
  hsts: "true"
  proxy-body-size: 64m
  proxy-connect-timeout: "15"
  proxy-read-timeout: "31536000"
  proxy-send-timeout: "31536000"
  proxy-next-upstream: error timeout http_502 http_503 http_504
  ssl-protocols: TLSv1.2
  ssl-ciphers: "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH"
  ssl-session-cache: "true"
  ssl-session-cache-size: 4m
  ssl-session-timeout: 10m
  ssl-session-tickets: "false"
  upstream-max-fails: "0"
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: nginx-ingress
  namespace: nginx-ingress
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: nginx-ingress
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: nginx-ingress-serviceaccount
      containers:
      - name: nginx-ingress
        image: gcr.io/google_containers/nginx-ingress-controller:0.9.0-beta.10
        imagePullPolicy: Always
        args:
        - /nginx-ingress-controller
        - --logtostderr
        - --configmap=$(POD_NAMESPACE)/nginx-ingress
        - --default-backend-service=$(POD_NAMESPACE)/default-backend
        - --sync-period=5s
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: BUMP
          value: "1"
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10254
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10254
          initialDelaySeconds: 10
          timeoutSeconds: 1
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 443
          hostPort: 443
